{"version":3,"sources":["component/boxs-component/boxs.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Boxs","props","useState","color","setcolor","className","centerMode","centerPadding","slidesToShow","responsive","breakpoint","settings","arrows","model","map","item","index","style","background","onClick","number","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA2DeA,EAjDF,SAACC,GAAqB,IAAD,EACJC,oBAAkB,GADd,mBACvBC,EADuB,KAChBC,EADgB,KA+B9B,OACI,qBAAKC,UAAU,UAAf,SACI,cAAC,IAAD,2BA3BO,CACXC,YAAY,EACZC,cAAe,OACfC,aAAc,EACdC,WAAY,CACR,CACEC,WAAY,IACZC,SAAU,CACRC,QAAQ,EACRN,YAAY,EACZC,cAAe,OACfC,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRC,QAAQ,EACRN,YAAY,EACZC,cAAe,OACfC,aAAc,OAOlB,aACKP,EAAMY,MAAMC,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAKX,UAAU,MAAf,SACI,sBAAKY,MAAO,CAAEC,WAAYf,IAAUa,EAAQ,OAAS,SAAWG,QAAS,kBAnCjF,SAACH,GAEbZ,EAASY,GAiC0FG,CAAQH,IAAQX,UAAU,6DAAzG,UACI,mBAAGY,MAAO,CAAEd,MAAOA,IAAUa,EAAQ,QAAU,SAAWX,UAAU,iCAApE,SAAsGU,EAAKK,SAC3G,mBAAGH,MAAO,CAAEd,MAAOA,IAAUa,EAAQ,QAAU,SAAWX,UAAU,wBAApE,gCCnBjBgB,MA1Bf,WAiBE,OACE,qBAAKhB,UAAU,MAAf,SACE,qBAAKA,UAAU,4BAAf,SACI,cAAC,EAAD,CAAMQ,MAnBQ,CACpB,CAAEO,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,KACV,CAAEA,OAAQ,MACV,CAAEA,OAAQ,MACV,CAAEA,OAAQ,MACV,CAAEA,OAAQ,cCJCE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1afb6f5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nexport type model = {\r\n    number?: string;\r\n}\r\ntype BoxsType = {\r\n    model: model[];\r\n}\r\nconst Boxs = (props: BoxsType) => {\r\n    const [color, setcolor] = useState<Number>(-1);\r\n    const onClick = (index: number) => {\r\n        debugger\r\n        setcolor(index);\r\n    }\r\n    var settings = {\r\n        centerMode: true,\r\n        centerPadding: '60px',\r\n        slidesToShow: 7,\r\n        responsive: [\r\n            {\r\n              breakpoint: 768,\r\n              settings: {\r\n                arrows: false,\r\n                centerMode: true,\r\n                centerPadding: '40px',\r\n                slidesToShow: 3\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                arrows: false,\r\n                centerMode: true,\r\n                centerPadding: '40px',\r\n                slidesToShow: 1\r\n              }\r\n            }\r\n          ]\r\n      }\r\n    return (\r\n        <div className='w-11/12'>\r\n            <Slider {...settings}>\r\n                {props.model.map((item, index) => {\r\n                    return (\r\n                        <div className='p-8'>\r\n                            <div style={{ background: color === index ? 'blue' : 'white' }} onClick={() => onClick(index)} className='rounded-full text-center md:pr-3 md:pl-3 md:pt-12 md:pb-12'>\r\n                                <p style={{ color: color === index ? 'white' : ' gray' }} className='text-center text-3xl font-bold'>{item.number}</p>\r\n                                <p style={{ color: color === index ? 'white' : ' gray' }} className='text-center text-2xl '>week</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Boxs;","import React from 'react';\nimport './App.css';\nimport Boxs, { model } from './component/boxs-component/boxs.component';\n\nfunction App() {\n  const data: model[] = [\n    { number: '1' },\n    { number: '2' },\n    { number: '3' },\n    { number: '4' },\n    { number: '5' },\n    { number: '6' },\n    { number: '7' },\n    { number: '8' },\n    { number: '9' },\n    { number: '10' },\n    { number: '11' },\n    { number: '12' },\n    { number: '13' },\n  ];\n\n  return (\n    <div className=\"App\">\n      <div className='flex mt-20 justify-center'>\n          <Boxs model={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}